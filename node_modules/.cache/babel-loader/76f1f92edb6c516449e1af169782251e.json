{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bruno\\\\Desktop\\\\Fifteen\\\\src\\\\page\\\\index.js\";\nimport React, { Component } from 'react';\nimport './main.css';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      titulo: \"Game Fifteen\",\n      subTitulo: \"Ordene os campos\",\n      box: [\"\"]\n    };\n\n    this.loadBox = () => {\n      //Carrega variaveis do state\n      const box = this.state.box;\n      var num,\n          min = 1,\n          max = 16,\n          i = 0; //Gera posicoes aleatorias\n\n      while (i <= 15) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        num = Math.floor(Math.random() * (max - min + 1)) + min; //verifica se nymero gerado ja existe\n        // eslint-disable-next-line \n\n        if (num !== box.find(value => value === num)) {\n          box[i] = num;\n          i++;\n        }\n      } //Converte numeros em string e preenche 16 como vazio.\n\n\n      box.map((value, index) => box[index] = value < 10 ? String(\"0\" + value) : String(value));\n      box.map((value, index) => box[index] = value === \"16\" ? String(\" \") : String(value)); //Salva state das variaveis\n\n      this.setState({\n        box\n      });\n    };\n\n    this.playBox = ({\n      currentTarget\n    }) => {\n      //Carrega variaveis do state\n      const box = this.state.box; //Carrega propriedades do elemento clicado\n\n      var id = currentTarget.id,\n          value = currentTarget.innerHTML; //Remove elemento <strong>\n\n      value = value.replace(\"<strong>\", \"\");\n      value = value.replace(\"</strong>\", \"\"); //Localiza posicao do campo de valor vazio\n      // box.find((value, index) => (value === \" \") ? pos = index : false);\n\n      var pos = box.findIndex(value => value === \" \"); //Valida de a jogada eh possivel \n      //(somente campos anterior, proximo, superior e inferior podem jogar)\n      // eslint-disable-next-line\n\n      if (pos - 1 == id || pos + 1 == id || pos - 4 == id || pos + 4 == id) {\n        //Salva novos valores do campo jogado\n        box[id] = \" \";\n        box[pos] = value; //Salva novo state das variaveis\n\n        this.setState({\n          box\n        });\n      }\n    };\n  }\n\n  //Metodo que executa ao carregar componente\n  componentDidMount() {\n    //Inicia o metodo\n    this.loadBox();\n  } //Metodo que gera jogo aleatorio\n\n\n  //Metodo para carregar(renderizar) a pagina\n  render() {\n    //Carrega variaveis do state\n    const _this$state = this.state,\n          titulo = _this$state.titulo,\n          subTitulo = _this$state.subTitulo,\n          box = _this$state.box; // Cria a pagina\n\n    return React.createElement(\"div\", {\n      className: \"border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", titulo, \" \"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" \", subTitulo, \" \"), box.map((values, index) => React.createElement(\"div\", {\n      key: index,\n      id: index,\n      className: \"box\",\n      onClick: this.playBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, values))), React.createElement(\"button\", {\n      onClick: this.loadBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Reiniciar\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bruno/Desktop/Fifteen/src/page/index.js"],"names":["React","Component","Main","state","titulo","subTitulo","box","loadBox","num","min","max","i","Math","ceil","floor","random","find","value","map","index","String","setState","playBox","currentTarget","id","innerHTML","replace","pos","findIndex","componentDidMount","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './main.css';\r\n\r\nexport default class Main extends Component {\r\n    //Declara variaveis globais\r\n    state = {\r\n        titulo: \"Game Fifteen\",\r\n        subTitulo: \"Ordene os campos\",\r\n        box: [\"\"]\r\n    };\r\n    //Metodo que executa ao carregar componente\r\n    componentDidMount() {\r\n        //Inicia o metodo\r\n        this.loadBox();\r\n    }\r\n\r\n    //Metodo que gera jogo aleatorio\r\n    loadBox = () => {\r\n        //Carrega variaveis do state\r\n        const { box } = this.state;\r\n        var num, min = 1, max = 16, i = 0;\r\n        //Gera posicoes aleatorias\r\n        while (i <= 15) {\r\n            min = Math.ceil(min);\r\n            max = Math.floor(max);\r\n            num = Math.floor(Math.random() * (max - min + 1)) + min;\r\n            //verifica se nymero gerado ja existe\r\n            // eslint-disable-next-line \r\n            if (num !== (box.find(value => value === num))) {\r\n                box[i] = num;\r\n                i++;\r\n            }\r\n        }\r\n        //Converte numeros em string e preenche 16 como vazio.\r\n        box.map((value, index) => box[index] = (value < 10) ? String(\"0\" + value) : String(value));\r\n        box.map((value, index) => box[index] = (value === \"16\") ? String(\" \") : String(value));\r\n        //Salva state das variaveis\r\n        this.setState({ box });\r\n    };\r\n\r\n    //Metodo de jogar\r\n    playBox = ({ currentTarget }) => {\r\n        //Carrega variaveis do state\r\n        const { box } = this.state;\r\n        //Carrega propriedades do elemento clicado\r\n        var id = currentTarget.id, value = currentTarget.innerHTML;\r\n        //Remove elemento <strong>\r\n        value = value.replace(\"<strong>\", \"\");\r\n        value = value.replace(\"</strong>\", \"\");\r\n        //Localiza posicao do campo de valor vazio\r\n        // box.find((value, index) => (value === \" \") ? pos = index : false);\r\n        var pos = box.findIndex((value) => (value === \" \"));\r\n\r\n        //Valida de a jogada eh possivel \r\n        //(somente campos anterior, proximo, superior e inferior podem jogar)\r\n        // eslint-disable-next-line\r\n        if ((pos - 1 == id) || (pos + 1 == id) || (pos - 4 == id) || (pos + 4 == id)) {\r\n            //Salva novos valores do campo jogado\r\n            box[id] = \" \";\r\n            box[pos] = value;\r\n            //Salva novo state das variaveis\r\n            this.setState({ box });\r\n        }\r\n    }\r\n\r\n    //Metodo para carregar(renderizar) a pagina\r\n    render() {\r\n        //Carrega variaveis do state\r\n        const { titulo, subTitulo, box } = this.state;\r\n        // Cria a pagina\r\n        return (\r\n            <div className=\"border\">\r\n                <h1> {titulo} </h1>\r\n                <h3> {subTitulo} </h3>\r\n                {box.map((values, index) => (\r\n                    <div key={index} id={index} className=\"box\" onClick={this.playBox}><strong>{values}</strong></div>\r\n                ))}\r\n                <button onClick={this.loadBox}>Reiniciar</button>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}