{"version":3,"sources":["page/index.js","App.js","serviceWorker.js","index.js"],"names":["Main","state","titulo","subTitulo","win","box","contagem","loadBox","change","pos","pass","move","i","Math","floor","random","map","value","index","parseInt","findIndex","String","setState","playBox","currentTarget","id","innerHTML","replace","winBox","corretos","full","autoBox","vazio","num","dif","lvazio","lnum","lpos","fifteen","go","delay","setInterval","console","log","clearInterval","this","className","values","key","onClick","disabled","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d126be5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './main.css';\r\n\r\nexport default class Main extends Component {\r\n    //Declara variaveis globais\r\n    state = {\r\n        titulo: \"Game Fifteen\",\r\n        subTitulo: \"Ordene os campos\",\r\n        win: \"jogando\",\r\n        // box: [],\r\n        box: [],\r\n        contagem: 0,\r\n    };\r\n    //Metodo que executa ao carregar componente\r\n    componentDidMount() {\r\n        //Inicia o metodo\r\n        this.loadBox();\r\n    }\r\n\r\n    //Metodo que gerar embaralhando\r\n    loadBox = () => {\r\n        //Carrega variaveis do state\r\n        let { contagem, win } = this.state;\r\n        const box = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, \" \"];\r\n        // eslint-disable-next-line\r\n        var change, min = 500, max = 1500, i = 1, pos, pass, move, x;\r\n        //Gera posicoes aleatorias\r\n        change = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n        //Converte numeros em string e preenche 16 como vazio.\r\n        box.map((value, index) => box[index] = ((value < 10) && (value !== \" \")) ? (\"0\" + parseInt(value)) : value);\r\n\r\n        while (i <= change) {\r\n            pass = 0; move = 0;\r\n            pos = box.findIndex(value => value === \" \");\r\n\r\n            while (pass === 0) {\r\n                //Gera movimento aleatorio\r\n                pass = 0;\r\n                move = Math.floor(Math.random() * 4) + 1;\r\n                //move: 1=box[-1], 2=box[+1], 3=box[-4], 4=box[+4] \r\n                //Autoriza movimento\r\n                ((pos === 0) && ((move !== 1) && (move !== 3))) ? pass++ : pass = pass + 0;\r\n                ((pos === 3) && ((move !== 2) && (move !== 3))) ? pass++ : pass = pass + 0;\r\n                ((pos === 12) && ((move !== 1) && (move !== 4))) ? pass++ : pass = pass + 0;\r\n                ((pos === 15) && ((move !== 2) && (move !== 4))) ? pass++ : pass = pass + 0;\r\n\r\n                (((pos === 4) || (pos === 8)) && (move !== 1)) ? pass++ : pass = pass + 0;\r\n                (((pos === 7) || (pos === 11)) && (move !== 2)) ? pass++ : pass = pass + 0;\r\n                (((pos === 1) || (pos === 2)) && (move !== 3)) ? pass++ : pass = pass + 0;\r\n                (((pos === 13) || (pos === 14)) && (move !== 4)) ? pass++ : pass = pass + 0;\r\n\r\n                (((pos === 5) || (pos === 6) || (pos === 9) || (pos === 10))) ? pass++ : pass = pass + 0;\r\n            }\r\n\r\n            // Realizando o movimento autorizado\r\n            if (move === 1) {\r\n                box[pos] = box[pos - 1];\r\n                box[pos - 1] = String(\" \");\r\n            }\r\n            if (move === 2) {\r\n                box[pos] = box[pos + 1];\r\n                box[pos + 1] = String(\" \");\r\n            }\r\n            if (move === 3) {\r\n                box[pos] = box[pos - 4];\r\n                box[pos - 4] = String(\" \");\r\n            }\r\n            if (move === 4) {\r\n                box[pos] = box[pos + 4];\r\n                box[pos + 4] = String(\" \");\r\n            }\r\n            //Passa para o proximo CHANGE\r\n            i++;\r\n        }\r\n        //Zera contagem (Jogadas)\r\n        contagem = 0;\r\n        win = \"jogando\";\r\n        //Salva state das variaveis\r\n        this.setState({ box, contagem, win });\r\n\r\n    };\r\n\r\n    //Metodo de jogar\r\n    playBox = ({ currentTarget }) => {\r\n        //Carrega variaveis do state\r\n        const { box } = this.state;\r\n        let { contagem } = this.state;\r\n        //Carrega propriedades do elemento clicado\r\n        var id = currentTarget.id, value = currentTarget.innerHTML;\r\n        //Remove elemento <strong>\r\n        value = value.replace(\"<strong>\", \"\");\r\n        value = value.replace(\"</strong>\", \"\");\r\n        //Localiza posicao do campo de valor vazio\r\n        // box.find((value, index) => (value === \" \") ? pos = index : false);\r\n        var pos = box.findIndex((value) => (value === \" \"));\r\n\r\n        //Valida de a jogada eh possivel \r\n        //(somente campos anterior, proximo, superior e inferior podem jogar)\r\n        // eslint-disable-next-line\r\n        if ((pos - 1 == id) || (pos + 1 == id) || (pos - 4 == id) || (pos + 4 == id)) {\r\n            //Salva novos valores do campo jogado\r\n            box[id] = \" \";\r\n            box[pos] = value;\r\n            contagem++;\r\n            //Salva novo state das variaveis\r\n            this.setState({ box, contagem });\r\n            this.winBox();\r\n        }\r\n    }\r\n\r\n    //Verifica se Ganhou\r\n    winBox = () => {\r\n        //Importa variaveis de state\r\n        const { box } = this.state;\r\n        let { win } = this.state;\r\n        let corretos = 0;\r\n        //Cria jogo campeao\r\n        const full = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \" \"];\r\n        //Conta os campos corretos\r\n        box.map((value, index) => value === full[index] ? corretos++ : false);\r\n        //Verifica se todos so 16 campos estiverem na posicao\r\n        win = corretos === 16 ? win = \"congrats\" : \"jogando\";\r\n        //Salva variavel ganhar\r\n        this.setState({ win });\r\n        // this.render();\r\n    }\r\n\r\n    //Win automatico\r\n    autoBox = () => {\r\n        //Carrega variaveis do state e declara novas\r\n        const { box } = this.state;\r\n        let { contagem } = this.state;\r\n        let vazio, num, pos = 0, fifteen = 1, dif, go = \"Num\", lvazio, lnum, lpos;\r\n        (fifteen < 10) ? fifteen = String(\"0\" + fifteen) : fifteen = String(fifteen);\r\n        // eslint-disable-next-line\r\n        num = box.findIndex(value => value === fifteen);\r\n        vazio = box.findIndex(value => value === \" \");\r\n        // Converte variavel em string\r\n        // Recebe posicao de NUM e VAZIO\r\n        // go = num;\r\n        // go = pos;\r\n        fifteen = parseInt(fifteen);\r\n        let delay = setInterval(() => {\r\n            //Verifica se todos os 15 estao corretos\r\n            if (fifteen !== pos) {\r\n                //Carrega nova posicao do VAZIO\r\n                (fifteen < 10) ? fifteen = String(\"0\" + fifteen) : fifteen = String(fifteen);\r\n                num = box.findIndex(value => value === fifteen);\r\n                fifteen = parseInt(fifteen);\r\n                vazio = box.findIndex(value => value === \" \");\r\n\r\n                //Vai para o NUM\r\n                if (go === \"Num\") {\r\n                    // Recebe linha do NUM\r\n                    dif = vazio - num;\r\n                    if (num <= 3) {\r\n                        lnum = 1;\r\n                    } else if ((num >= 4) && (num <= 7)) {\r\n                        lnum = 2;\r\n                    } else if ((num >= 8) && (num <= 11)) {\r\n                        lnum = 3;\r\n                    } else if (num >= 12) {\r\n                        lnum = 4;\r\n                    }\r\n                    //Recebe linha do VAZIO\r\n                    if (vazio <= 3) {\r\n                        lvazio = 1;\r\n                    } else if ((vazio >= 4) && (vazio <= 7)) {\r\n                        lvazio = 2;\r\n                    } else if ((vazio >= 8) && (vazio <= 11)) {\r\n                        lvazio = 3;\r\n                    } else if (vazio >= 12) {\r\n                        lvazio = 4;\r\n                    }\r\n                    //Se LNUM <> LVAZIO - move para CIMA ou BAIXO\r\n                    if (lnum !== lvazio) {\r\n                        if (dif < 0) {\r\n                            box[vazio] = box[vazio + 4];\r\n                            box[vazio + 4] = \" \";\r\n                            contagem++;\r\n                            if (dif === -4) {\r\n                                go = \"Pos\";\r\n                            }\r\n                        } else if (dif > 0) {\r\n                            box[vazio] = box[vazio - 4];\r\n                            box[vazio - 4] = \" \";\r\n                            contagem++;\r\n                        }\r\n                        //SE LNUM = LVAZIO - move para os LADOS\r\n                    } else {\r\n                        if (dif < -1) {\r\n                            box[vazio] = box[vazio + 1];\r\n                            box[vazio + 1] = \" \";\r\n                            contagem++;\r\n                        } else if (dif > 1) {\r\n                            box[vazio] = box[vazio - 1];\r\n                            box[vazio - 1] = \" \";\r\n                            contagem++;\r\n                        } else if (dif === -1) {\r\n                            box[vazio] = box[vazio + 1];\r\n                            box[vazio + 1] = \" \";\r\n                            contagem++;\r\n                            go = \"Pos\";\r\n                        } else if ((dif === 1) && ((vazio !== 1) || (vazio !== 2) || (vazio !== 3))) {\r\n                            box[vazio] = box[vazio - 4];\r\n                            box[vazio - 4] = \" \";\r\n                            contagem++;\r\n                        } else if ((dif === 1) && ((vazio !== 13) || (vazio !== 14) || (vazio !== 15))) {\r\n                            box[vazio] = box[vazio - 4];\r\n                            box[vazio - 4] = \" \";\r\n                            contagem++;\r\n                        }\r\n\r\n                    }\r\n                    console.log(\"1- LNUM: \" + lnum + \" LVAZIO: \" + lvazio + \" go: \" + go + \" VAZIO: \" + vazio + \" NUM: \" + num + \" DIF: \" + dif + \" C: \" + contagem + \" BOX: \" + box);\r\n                    //Vai para a POS\r\n                } else {\r\n                    if (go === \"Pos\") {\r\n                        dif = vazio - pos;\r\n                        //Recebe linha da POS CORRETA\r\n                        if (pos <= 3) {\r\n                            lpos = 1;\r\n                        } else if ((pos >= 4) && (pos <= 7)) {\r\n                            lpos = 2;\r\n                        } else if ((pos >= 8) && (pos <= 11)) {\r\n                            lpos = 3;\r\n                        } else if (pos >= 12) {\r\n                            lpos = 4;\r\n                        }\r\n                        //Recebe linha do VAZIO (atualiza)\r\n                        if (vazio <= 3) {\r\n                            lvazio = 1;\r\n                        } else if ((vazio >= 4) && (vazio <= 7)) {\r\n                            lvazio = 2;\r\n                        } else if ((vazio >= 8) && (vazio <= 11)) {\r\n                            lvazio = 3;\r\n                        } else if (vazio >= 12) {\r\n                            lvazio = 4;\r\n                        }\r\n                        //Se LNUM <> LVAZIO - move para CIMA ou BAIXO\r\n                        if (lpos !== lvazio) {\r\n                            if (dif < 0) {\r\n                                box[vazio] = box[vazio + 4];\r\n                                box[vazio + 4] = \" \";\r\n                                contagem++;\r\n                            } else if (dif > 0) {\r\n                                //Se estiver em VAZIO abaixo de NUM - MOVE para o LADO >\r\n                                if (((vazio - num) === 4) && ((vazio !== 3) || (vazio !== 7) || (vazio !== 11))) {\r\n                                    box[vazio] = box[vazio + 1];\r\n                                    box[vazio + 1] = \" \";\r\n                                    contagem++;\r\n                                    //Se estiver em VAZIO abaixo de NUM - MOVE para o LADO <\r\n                                } else if (((vazio - num) === 4) && ((vazio === 3) || (vazio === 7) || (vazio === 11))) {\r\n                                    box[vazio] = box[vazio - 1];\r\n                                    box[vazio - 1] = \" \";\r\n                                    contagem++;\r\n                                    //Se nao move pra cima\r\n                                } else {\r\n                                    box[vazio] = box[vazio - 4];\r\n                                    box[vazio - 4] = \" \";\r\n                                    contagem++;\r\n                                }\r\n                            }\r\n                            //SE LPOS = LVAZIO - move para os LADOS\r\n                        } else {\r\n                            if (dif < 0) {\r\n                                box[vazio] = box[vazio + 1];\r\n                                box[vazio + 1] = \" \";\r\n                                contagem++;\r\n                            } else if ((dif > 0) && (num !== pos)) {\r\n                                box[vazio] = box[vazio - 1];\r\n                                box[vazio - 1] = \" \";\r\n                                contagem++;\r\n                            } else if (num === pos) {\r\n                                fifteen++;\r\n                                (fifteen < 10) ? fifteen = String(\"0\" + fifteen) : fifteen = String(fifteen);\r\n                                num = box.findIndex(value => value === fifteen);\r\n                                fifteen = parseInt(fifteen);\r\n                                pos++;\r\n                                go = \"Num\";\r\n                            } else {\r\n                                go = \"Num\";\r\n                            }\r\n                        }\r\n                        console.log(\"2- LPOS: \" + lpos + \" LVAZIO: \" + lvazio + \" go: \" + go + \" VAZIO: \" + vazio + \" POS: \" + pos + \" DIF: \" + dif + \" C: \" + contagem + \" BOX: \" + box);\r\n                    }\r\n                }\r\n                //Atualiza state\r\n                this.setState({ box, contagem });\r\n                //Converte valor em numero\r\n            } else {\r\n\r\n                clearInterval(delay);\r\n            }\r\n            // this.winBox();\r\n        }, 500);\r\n    }\r\n\r\n    //Metodo para carregar(renderizar) a pagina\r\n    render() {\r\n        //Carrega variaveis do state\r\n        const { titulo, subTitulo, box, win, contagem } = this.state;\r\n        // Cria a pagina\r\n        return (\r\n            <div className=\"border border-0\">\r\n                <h1> {titulo} </h1>\r\n                <h3> {subTitulo} </h3>\r\n                <div className={win}></div>\r\n                {box.map((values, index) => (\r\n                    <div key={index} id={index} className=\"box\" onClick={this.playBox}>\r\n                        <strong>{values}</strong></div>\r\n                ))}\r\n                <button className=\"ml-5 my-3 float-left\" onClick={this.loadBox}><strong>Reiniciar</strong></button>\r\n                <button className=\"mr-5 my-3 float-right\" onClick={this.autoBox} disabled={win === \"congrats\" || '1=1'}>\r\n                    <div className=\"d-flex\">\r\n                        <i className=\"fas fa-cogs fa-lg align-self-center\"></i>\r\n                        <strong> Auto</strong>\r\n                    </div>\r\n                </button>\r\n                <span>Jogadas: {contagem}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Main from './page/';\n\nconst App = () => (\n  <div className=\"App d-flex justify-content-center\">\n    <Main />\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}